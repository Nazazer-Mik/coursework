/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestDriveImport } from './routes/test-drive'
import { Route as ServicingImport } from './routes/servicing'
import { Route as RegisterImport } from './routes/register'
import { Route as NewVehiclesImport } from './routes/new-vehicles'
import { Route as CustomVehicleImport } from './routes/custom-vehicle'
import { Route as ChargingImport } from './routes/charging'
import { Route as AuthImport } from './routes/auth'
import { Route as AdminAuthImport } from './routes/admin-auth'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TestDriveRoute = TestDriveImport.update({
  path: '/test-drive',
  getParentRoute: () => rootRoute,
} as any)

const ServicingRoute = ServicingImport.update({
  path: '/servicing',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const NewVehiclesRoute = NewVehiclesImport.update({
  path: '/new-vehicles',
  getParentRoute: () => rootRoute,
} as any)

const CustomVehicleRoute = CustomVehicleImport.update({
  path: '/custom-vehicle',
  getParentRoute: () => rootRoute,
} as any)

const ChargingRoute = ChargingImport.update({
  path: '/charging',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminAuthRoute = AdminAuthImport.update({
  path: '/admin-auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/admin-auth': {
      id: '/admin-auth'
      path: '/admin-auth'
      fullPath: '/admin-auth'
      preLoaderRoute: typeof AdminAuthImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/charging': {
      id: '/charging'
      path: '/charging'
      fullPath: '/charging'
      preLoaderRoute: typeof ChargingImport
      parentRoute: typeof rootRoute
    }
    '/custom-vehicle': {
      id: '/custom-vehicle'
      path: '/custom-vehicle'
      fullPath: '/custom-vehicle'
      preLoaderRoute: typeof CustomVehicleImport
      parentRoute: typeof rootRoute
    }
    '/new-vehicles': {
      id: '/new-vehicles'
      path: '/new-vehicles'
      fullPath: '/new-vehicles'
      preLoaderRoute: typeof NewVehiclesImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/servicing': {
      id: '/servicing'
      path: '/servicing'
      fullPath: '/servicing'
      preLoaderRoute: typeof ServicingImport
      parentRoute: typeof rootRoute
    }
    '/test-drive': {
      id: '/test-drive'
      path: '/test-drive'
      fullPath: '/test-drive'
      preLoaderRoute: typeof TestDriveImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AdminRoute,
  AdminAuthRoute,
  AuthRoute,
  ChargingRoute,
  CustomVehicleRoute,
  NewVehiclesRoute,
  RegisterRoute,
  ServicingRoute,
  TestDriveRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/admin-auth",
        "/auth",
        "/charging",
        "/custom-vehicle",
        "/new-vehicles",
        "/register",
        "/servicing",
        "/test-drive"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx"
    },
    "/admin-auth": {
      "filePath": "admin-auth.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/charging": {
      "filePath": "charging.tsx"
    },
    "/custom-vehicle": {
      "filePath": "custom-vehicle.tsx"
    },
    "/new-vehicles": {
      "filePath": "new-vehicles.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/servicing": {
      "filePath": "servicing.tsx"
    },
    "/test-drive": {
      "filePath": "test-drive.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
